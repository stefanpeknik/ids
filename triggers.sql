-- This trigger checks if the age of a person in the PERSON table is older than or equal to 18 years and if they are required to have a driver's license according to the law
-- If either of these conditions is not met, the trigger prevents the insertion of another record
CREATE OR REPLACE TRIGGER CHECK_DRIVER_AGE_AND_ABILITY BEFORE
    INSERT ON DRIVER FOR EACH ROW
DECLARE
    V_AGE INT;
BEGIN
    IF (:NEW.DRIVER_CAN_DRIVE = 'Y'
    AND :NEW.DRIVER_PERSON_ID IS NOT NULL) THEN
        SELECT
            PERSON_AGE INTO V_AGE
        FROM
            PERSON
        WHERE
            PERSON_ID = :NEW.DRIVER_PERSON_ID;
        IF (V_AGE < 18) THEN
            RAISE_APPLICATION_ERROR(-20001, 'Driver must be at least 18 years old.');
        END IF;
    ELSE
        RAISE_APPLICATION_ERROR(-20002, 'Driver must have DRIVING_CAN_DRIVE set to ''Y''');
    END IF;
END;
/

-- example
INSERT INTO PERSON (
    PERSON_ID,
    PERSON_NAME,
    PERSON_SURNAME,
    PERSON_AGE,
    PERSON_SEX,
    PERSON_GENDER,
    PERSON_INSURANCE_ID,
    PERSON_PERSONAL_ID,
    PERSON_BIRTH_DATE,
    PERSON_STREET,
    PERSON_HOUSE_NUMBER,
    PERSON_CITY,
    PERSON_ZIP
) VALUES (
    312312,
    'Alice',
    'Smith',
    15,
    'F',
    'Female',
    1,
    '921231/5678',
    TO_DATE('1992-12-31', 'YYYY-MM-DD'),
    'Main Street',
    456,
    'Prague',
    '12345'
);

INSERT INTO DRIVER (
    DRIVER_LICENSE_NUMBER,
    DRIVER_CAN_DRIVE,
    DRIVER_PERSON_ID
) VALUES (
    'ABCD-1234-EFGH-5678',
    'Y',
    312312
);

INSERT INTO DRIVER (
    DRIVER_LICENSE_NUMBER,
    DRIVER_CAN_DRIVE,
    DRIVER_PERSON_ID
) VALUES (
    'ABCD-1234-EFGH-5678',
    'N',
    312312
);

-- This trigger counts the number of people insured under each insurance policy in the INSURANCE table and updates the INSURANCE_PERSON_COUNT column in this table
CREATE OR REPLACE TRIGGER PERSON_INSURANCE_COUNT_TRIGGER AFTER
    INSERT OR DELETE OR UPDATE OF PERSON_INSURANCE_ID ON PERSON FOR EACH ROW
BEGIN
    UPDATE INSURANCE
    SET
        INSURANCE_PERSON_COUNT = INSURANCE_PERSON_COUNT + 1
    WHERE
        INSURANCE_ID = :NEW.PERSON_INSURANCE_ID;
    UPDATE INSURANCE
    SET
        INSURANCE_PERSON_COUNT = INSURANCE_PERSON_COUNT - 1
    WHERE
        INSURANCE_ID = :OLD.PERSON_INSURANCE_ID;
END;
/

-- example
SELECT
    INSURANCE_PERSON_COUNT
FROM
    INSURANCE
WHERE
    INSURANCE_ID = 1;

INSERT INTO PERSON (
    PERSON_NAME,
    PERSON_SURNAME,
    PERSON_AGE,
    PERSON_SEX,
    PERSON_GENDER,
    PERSON_INSURANCE_ID,
    PERSON_PERSONAL_ID,
    PERSON_BIRTH_DATE,
    PERSON_STREET,
    PERSON_HOUSE_NUMBER,
    PERSON_CITY,
    PERSON_ZIP
) VALUES (
    'Alice',
    'Smith',
    20,
    'F',
    'Female',
    1,
    '921231/5678',
    TO_DATE('1992-12-31', 'YYYY-MM-DD'),
    'Main Street',
    456,
    'Prague',
    '12345'
);

SELECT
    INSURANCE_PERSON_COUNT
FROM
    INSURANCE
WHERE
    INSURANCE_ID = 1;

-- This trigger counts the number of motor vehicles insured under each insurance policy in the INSURANCE table and updates the INSURANCE_MOTOR_VEHICLE_COUNT column in this table
CREATE OR REPLACE TRIGGER MOTOR_VEHICLE_INSURANCE_COUNT_TRIGGER AFTER
    INSERT OR DELETE OR UPDATE OF MOTOR_VEHICLE_INSURANCE_ID ON MOTOR_VEHICLE FOR EACH ROW
BEGIN
    UPDATE INSURANCE
    SET
        INSURANCE_MOTOR_VEHICLE_COUNT = INSURANCE_MOTOR_VEHICLE_COUNT + 1
    WHERE
        INSURANCE_ID = :NEW.MOTOR_VEHICLE_INSURANCE_ID;
    UPDATE INSURANCE
    SET
        INSURANCE_MOTOR_VEHICLE_COUNT = INSURANCE_MOTOR_VEHICLE_COUNT - 1
    WHERE
        INSURANCE_ID = :OLD.MOTOR_VEHICLE_INSURANCE_ID;
END;
/

-- example
SELECT
    INSURANCE_MOTOR_VEHICLE_COUNT
FROM
    INSURANCE
WHERE
    INSURANCE_ID = 1;

INSERT INTO MOTOR_VEHICLE (
    MOTOR_VEHICLE_VIN,
    MOTOR_VEHICLE_MAKE,
    MOTOR_VEHICLE_MODEL,
    MOTOR_VEHICLE_YEAR,
    MOTOR_VEHICLE_LICENSE_PLATE,
    MOTOR_VEHICLE_COLOR,
    MOTOR_VEHICLE_INSURANCE_ID,
    MOTOR_VEHICLE_VEHICLE_OWNER_ID,
    MOTOR_VEHICLE_WEIGHT,
    MOTOR_VEHICLE_HEIGHT,
    MOTOR_VEHICLE_WIDTH,
    MOTOR_VEHICLE_LENGTH,
    MOTOR_VEHICLE_TRANSMISSION,
    MOTOR_VEHICLE_FUEL_TYPE,
    MOTOR_VEHICLE_EMISION_CLASS,
    MOTOR_VEHICLE_TIRE_BRAND,
    MOTOR_VEHICLE_BODY_TYPE
) VALUES (
    '5UXFA13595LY08295',
    'BMW',
    'X5',
    2005,
    'DEF456',
    'Black',
    1,
    3,
    3000,
    170,
    80,
    200,
    'Manual',
    'Diesel',
    'Euro 6',
    'Bridgestone',
    'SUV'
);

SELECT
    INSURANCE_MOTOR_VEHICLE_COUNT
FROM
    INSURANCE
WHERE
    INSURANCE_ID = 1;