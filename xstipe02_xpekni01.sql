-- Drop a table

-- must be dropped before DRIVER and MOTOR_VEHICLE
DROP TABLE OFFENSE;

-- must be dropped before DRIVER and MOTOR_VEHICLE
DROP TABLE DRIVER_VEHICLE;

-- must be dropped before PERSON
DROP TABLE DRIVER;

-- must be dropped before MOTOR_VEHICLE
DROP TABLE STOLEN_VEHICLE;

-- must be dropped before MOTOR_VEHICLE
DROP TABLE PERSONAL_VEHICLE;

-- must be dropped before MOTOR_VEHICLE
DROP TABLE CARGO_VEHICLE;

-- must be dropped before MOTOR_VEHICLE
DROP TABLE MOTORCYCLE;

-- must be dropped before MOTOR_VEHICLE
DROP TABLE BUS;

-- must be dropped before MOTOR_VEHICLE
DROP TABLE CARAVAN;

-- must be dropped before MOTOR_VEHICLE
DROP TABLE OTHER;

-- must be dropped before VEHICLE_OWNER and INSURANCE
DROP TABLE MOTOR_VEHICLE;

-- must be dropped before PERSON
DROP TABLE VEHICLE_OWNER;

-- must be dropped before INSURANCE
DROP TABLE PERSON;

DROP TABLE INSURANCE;

-- create table for Insurance that Person is under
CREATE TABLE INSURANCE (
    INSURANCE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    INSURANCE_NAME VARCHAR2(50) NOT NULL,
    INSURANCE_POLICY_NUMBER VARCHAR2(50) NOT NULL, -- policy number is not always a number, so it is not constrained
    INSURANCE_STREET VARCHAR2(100) NOT NULL,
    INSURANCE_HOUSE_NUMBER INT NOT NULL,
    INSURANCE_CITY VARCHAR2(50) NOT NULL,
    INSURANCE_STATE VARCHAR2(2) DEFAULT 'CZ' NOT NULL, -- should always be CZ
    INSURANCE_ZIP VARCHAR2(5) CONSTRAINT INSURANCE_ZIP_CHECK CHECK (REGEXP_LIKE(INSURANCE_ZIP, '^\d{3}\s?\d{2}$'))
);

-- create table for Person that is either Driver (who commits an offense and is licensed to drive a Motor vehicle) or Vehicle owner
CREATE TABLE PERSON (
    PERSON_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PERSON_NAME VARCHAR2(50) NOT NULL,
    PERSON_SURNAME VARCHAR2(50) NOT NULL,
    PERSON_AGE INT NOT NULL CONSTRAINT PERSON_AGE_CHECK CHECK (PERSON_AGE >= 0),
    PERSON_SEX VARCHAR2(1) NOT NULL CONSTRAINT PERSON_SEX_CHECK CHECK (PERSON_SEX = 'M' OR PERSON_SEX = 'F'),
    PERSON_GENDER VARCHAR2(50), -- gender is not always male or female, so it is not constrained
    PERSON_INSURANCE_ID INT, -- insurance that that Person is under, can be null
    PERSON_PERSONAL_ID VARCHAR2(11) NOT NULL CHECK(REGEXP_LIKE(PERSON_PERSONAL_ID, '^\d{2}(0[1-9]|1[0-2]|5[1-9]|6[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])\/\d{3,4}$')), -- must contain /
    PERSON_BIRTH_DATE DATE NOT NULL,
    PERSON_STREET VARCHAR2(100) NOT NULL,
    PERSON_HOUSE_NUMBER INT NOT NULL,
    PERSON_CITY VARCHAR2(50) NOT NULL,
    PERSON_STATE VARCHAR2(2) DEFAULT 'CZ' NOT NULL, -- should always be CZ
    PERSON_ZIP VARCHAR2(5) CONSTRAINT PERSON_ZIP_CHECK CHECK (REGEXP_LIKE(PERSON_ZIP, '^\d{3}\s?\d{2}$')),
    CONSTRAINT PERSON_INSURANCE_ID_FK FOREIGN KEY (PERSON_INSURANCE_ID) REFERENCES INSURANCE (INSURANCE_ID) ON DELETE SET NULL -- FK to Insurance
);

-- create table for Vehicle owner that owns a Motor vehicle
CREATE TABLE VEHICLE_OWNER (
    VEHICLE_OWNER_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VEHICLE_OWNER_PERSON_ID INT NOT NULL, -- Person that is a Vehicle owner
    CONSTRAINT VEHICLE_OWNER_PERSON_ID_FK FOREIGN KEY (VEHICLE_OWNER_PERSON_ID) REFERENCES PERSON (PERSON_ID) ON DELETE CASCADE -- FK to Person
);

-- create table for Driver that commits an offense and is licensed to drive a Motor vehicle
CREATE TABLE DRIVER (
    DRIVER_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DRIVER_LICENSE_NUMBER VARCHAR2(50) NOT NULL, -- license number is not always a number, so it is not constrained
    DRIVER_CAN_DRIVE CHAR(1) NOT NULL CONSTRAINT DRIVER_CAN_DRIVE_CHECK CHECK (DRIVER_CAN_DRIVE = 'Y' OR DRIVER_CAN_DRIVE = 'N'), -- should always be Y or N
    DRIVER_PERSON_ID INT NOT NULL, -- Person that is a Driver
    CONSTRAINT DRIVER_PERSON_ID_FK FOREIGN KEY (DRIVER_PERSON_ID) REFERENCES PERSON (PERSON_ID) ON DELETE CASCADE -- FK to Person
);

-- gen/spec is done in a way that each type of Motor vehicle has its PK set to PK of its representative Motor vehicle
-- create table for Motor vehicle that is owned by Vehicle owner
CREATE TABLE MOTOR_VEHICLE(
    MOTOR_VEHICLE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MOTOR_VEHICLE_VIN VARCHAR2(17),
    MOTOR_VEHICLE_MAKE VARCHAR2(50),
    MOTOR_VEHICLE_MODEL VARCHAR2(50),
    MOTOR_VEHICLE_YEAR INT CONSTRAINT MOTOR_VEHICLE_YEAR_CHECK CHECK (MOTOR_VEHICLE_YEAR >= 1900),
    MOTOR_VEHICLE_LICENSE_PLATE VARCHAR2(50) NOT NULL, -- license plate is not always a number, so it is not constrained
    MOTOR_VEHICLE_COLOR VARCHAR2(50),
    MOTOR_VEHICLE_INSURANCE_ID INT NOT NULL, -- insurance that Motor vehicle is under
    MOTOR_VEHICLE_VEHICLE_OWNER_ID INT NOT NULL, -- Vehicle owner that owns the Motor vehicle
    MOTOR_VEHICLE_WEIGHT INT CONSTRAINT MOTOR_VEHICLE_WEIGHT_CHECK CHECK (MOTOR_VEHICLE_WEIGHT >= 0),
    MOTOR_VEHICLE_HEIGHT INT CONSTRAINT MOTOR_VEHICLE_HEIGHT_CHECK CHECK (MOTOR_VEHICLE_HEIGHT >= 0),
    MOTOR_VEHICLE_WIDTH INT CONSTRAINT MOTOR_VEHICLE_WIDTH_CHECK CHECK (MOTOR_VEHICLE_WIDTH >= 0),
    MOTOR_VEHICLE_LENGTH INT CONSTRAINT MOTOR_VEHICLE_LENGTH_CHECK CHECK (MOTOR_VEHICLE_LENGTH >= 0),
    MOTOR_VEHICLE_TRANSMISSION VARCHAR2(50),
    MOTOR_VEHICLE_FUEL_TYPE VARCHAR2(50),
    MOTOR_VEHICLE_EMISION_CLASS VARCHAR2(50),
    MOTOR_VEHICLE_TIRE_BRAND VARCHAR2(50),
    MOTOR_VEHICLE_BODY_TYPE VARCHAR2(50),
    CONSTRAINT MOTOR_VEHICLE_INSURANCE_ID_FK FOREIGN KEY (MOTOR_VEHICLE_INSURANCE_ID) REFERENCES INSURANCE (INSURANCE_ID) ON DELETE SET NULL, -- FK to Insurance
    CONSTRAINT MOTOR_VEHICLE_VEHICLE_OWNER_ID_FK FOREIGN KEY (MOTOR_VEHICLE_VEHICLE_OWNER_ID) REFERENCES VEHICLE_OWNER (VEHICLE_OWNER_ID) ON DELETE SET NULL -- FK to Vehicle owner
);

-- create joint table for Driver and Motor vehicle
CREATE TABLE DRIVER_VEHICLE (
    DRIVER_ID INT NOT NULL,
    VEHICLE_ID INT NOT NULL,
    PRIMARY KEY (DRIVER_ID, VEHICLE_ID),
    FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER (DRIVER_ID) ON DELETE CASCADE,
    FOREIGN KEY (VEHICLE_ID) REFERENCES MOTOR_VEHICLE (MOTOR_VEHICLE_ID) ON DELETE CASCADE
);

-- create table for Offense that is commited by Driver and is commited in a Motor vehicle
CREATE TABLE OFFENSE (
    OFFENSE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    OFFENSE_DRIVER_ID INT NOT NULL, -- Driver that commits an offense
    OFFENSE_MOTOR_VEHICLE_ID INT NOT NULL, -- Motor vehicle that the offense was commited in
    OFFENSE_DATE_TIME DATE, -- type DATE contains date as well as time so offense_time ommited
    OFFENSE_LOCATION_STREET VARCHAR2(100) NOT NULL,
    OFFENSE_LOCATION_CITY VARCHAR2(50) NOT NULL,
    OFFENSE_LOCATION_STATE VARCHAR2(2) DEFAULT 'CZ' NOT NULL,
    OFFENSE_LOCATION_ZIP VARCHAR2(5) CONSTRAINT OFFENSE_LOCATION_ZIP_CHECK CHECK (REGEXP_LIKE(OFFENSE_LOCATION_ZIP, '^\d{3}\s?\d{2}$')),
    OFFENSE_TYPE VARCHAR2(50),
    OFFENSE_DESCRIPTION VARCHAR2(500), -- description of the offense
    OFFENSE_POINTS INT NOT NULL CONSTRAINT OFFENSE_POINTS_CHECK CHECK (OFFENSE_POINTS >= 0 AND OFFENSE_POINTS <= 12),
    OFFENSE_FINE INT DEFAULT 0 NOT NULL, -- always in czech crowns
    OFFENSE_LABEL VARCHAR2(50) DEFAULT NULL,
    CONSTRAINT OFFENSE_DRIVER_ID_FK FOREIGN KEY (OFFENSE_DRIVER_ID) REFERENCES DRIVER (DRIVER_ID) ON DELETE SET NULL, -- FK to Driver
    CONSTRAINT OFFENSE_MOTOR_VEHICLE_ID_FK FOREIGN KEY (OFFENSE_MOTOR_VEHICLE_ID) REFERENCES MOTOR_VEHICLE (MOTOR_VEHICLE_ID) ON DELETE SET NULL -- FK to Motor vehicle
);

-- create table for Stolen vehicle that is stolen
CREATE TABLE STOLEN_VEHICLE (
    STOLEN_VEHICLE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STOLEN_VEHICLE_DATE DATE NOT NULL,
    STOLEN_VEHICLE_STREET VARCHAR2(100) NOT NULL,
    STOLEN_VEHICLE_HOUSE_NUMBER INT,
    STOLEN_VEHICLE_CITY VARCHAR2(50) NOT NULL,
    STOLEN_VEHICLE_STATE VARCHAR2(2) DEFAULT 'CZ' NOT NULL, -- should always be CZ
    STOLEN_VEHICLE_ZIP VARCHAR2(5) CONSTRAINT STOLEN_VEHICLE_ZIP_CHECK CHECK (REGEXP_LIKE(STOLEN_VEHICLE_ZIP, '^\d{3}\s?\d{2}$')),
    STOLEN_VEHICLE_FOUND CHAR(1) NOT NULL CONSTRAINT STOLEN_VEHICLE_FOUND_CHECK CHECK (STOLEN_VEHICLE_FOUND IN ('Y', 'N')), -- Y if vehicle is found, N if not
    STOLEN_VEHICLE_MOTOR_VEHICLE_ID INT NOT NULL, -- Motor vehicle that is stolen
    CONSTRAINT STOLEN_VEHICLE_MOTOR_VEHICLE_ID_FK FOREIGN KEY (STOLEN_VEHICLE_MOTOR_VEHICLE_ID) REFERENCES MOTOR_VEHICLE (MOTOR_VEHICLE_ID) ON DELETE CASCADE -- FK to Motor vehicle
);

CREATE TABLE PERSONAL_VEHICLE(
    PERSONAL_VEHICLE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PERSONAL_VEHICLE_DOOR_COUNT INT CONSTRAINT PERSONAL_VEHICLE_DOOR_COUNT_CHECK CHECK (PERSONAL_VEHICLE_DOOR_COUNT >= 0),
    PERSONAL_VEHICLE_SEAT_COUNT INT CONSTRAINT PERSONAL_VEHICLE_SEAT_COUNT_CHECK CHECK (PERSONAL_VEHICLE_SEAT_COUNT >= 0),
    CONSTRAINT PERSONAL_VEHICLE_MOTOR_VEHICLE_ID_FK FOREIGN KEY (PERSONAL_VEHICLE_ID) REFERENCES MOTOR_VEHICLE (MOTOR_VEHICLE_ID) ON DELETE CASCADE
);

CREATE TABLE CARGO_VEHICLE(
    CARGO_VEHICLE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CARGO_VEHICLE_MAX_LOAD INT CONSTRAINT CARGO_VEHICLE_MAX_LOAD_CHECK CHECK (CARGO_VEHICLE_MAX_LOAD >= 0),
    CARGO_VEHICLE_TRAILER_LENGTH INT CONSTRAINT CARGO_VEHICLE_TRAILER_LENGTH_CHECK CHECK (CARGO_VEHICLE_TRAILER_LENGTH >= 0),
    CARGO_VEHICLE_TRAILER_TYPE VARCHAR2(50),
    CARGO_VEHICLE_CABIN_TYPE VARCHAR2(50),
    CARGO_VEHICLE_DEVICE_TYPE VARCHAR2(50),
    CONSTRAINT CARGO_VEHICLE_MOTOR_VEHICLE_ID_FK FOREIGN KEY (CARGO_VEHICLE_ID) REFERENCES MOTOR_VEHICLE (MOTOR_VEHICLE_ID) ON DELETE CASCADE
);

CREATE TABLE MOTORCYCLE(
    MOTORCYCLE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MOTORCYCLE_TYPE VARCHAR2(50),
    CONSTRAINT MOTORCYCLE_MOTOR_VEHICLE_ID_FK FOREIGN KEY (MOTORCYCLE_ID) REFERENCES MOTOR_VEHICLE (MOTOR_VEHICLE_ID) ON DELETE CASCADE
);

CREATE TABLE BUS(
    BUS_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    BUS_SEAT_COUNT INT CONSTRAINT BUS_SEAT_COUNT_CHECK CHECK (BUS_SEAT_COUNT >= 0),
    BUS_MAX_NUMBER_OF_PASSENGERS INT CONSTRAINT BUS_MAX_NUMBER_OF_PASSENGERS_CHECK CHECK (BUS_MAX_NUMBER_OF_PASSENGERS >= 0),
    CONSTRAINT BUS_MOTOR_VEHICLE_ID_FK FOREIGN KEY (BUS_ID) REFERENCES MOTOR_VEHICLE (MOTOR_VEHICLE_ID) ON DELETE CASCADE
);

CREATE TABLE CARAVAN(
    CARAVAN_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CARAVAN_TYPE VARCHAR2(50),
    CARAVAN_NUMBER_OF_BEDS INT CONSTRAINT CARAVAN_NUMBER_OF_BEDS_CHECK CHECK (CARAVAN_NUMBER_OF_BEDS >= 0),
    CONSTRAINT CARAVAN_MOTOR_VEHICLE_ID_FK FOREIGN KEY (CARAVAN_ID) REFERENCES MOTOR_VEHICLE (MOTOR_VEHICLE_ID) ON DELETE CASCADE
);

CREATE TABLE OTHER(
    OTHER_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    OTHER_DESCRIPTION VARCHAR2(50),
    CONSTRAINT OTHER_MOTOR_VEHICLE_ID_FK FOREIGN KEY (OTHER_ID) REFERENCES MOTOR_VEHICLE (MOTOR_VEHICLE_ID) ON DELETE CASCADE
);

INSERT INTO INSURANCE (
    INSURANCE_NAME,
    INSURANCE_POLICY_NUMBER,
    INSURANCE_STREET,
    INSURANCE_HOUSE_NUMBER,
    INSURANCE_CITY,
    INSURANCE_STATE,
    INSURANCE_ZIP
) VALUES (
    'ABC Insurance',
    '12345',
    'Main Street',
    10,
    'Prague',
    'CZ',
    '12345'
);

INSERT INTO INSURANCE (
    INSURANCE_NAME,
    INSURANCE_POLICY_NUMBER,
    INSURANCE_STREET,
    INSURANCE_HOUSE_NUMBER,
    INSURANCE_CITY,
    INSURANCE_ZIP
) VALUES (
    'kocotom',
    'A123C456',
    'Main Rtreet',
    133,
    'Brno',
    '12245'
);

INSERT INTO PERSON (
    PERSON_NAME,
    PERSON_SURNAME,
    PERSON_AGE,
    PERSON_SEX,
    PERSON_GENDER,
    PERSON_INSURANCE_ID,
    PERSON_PERSONAL_ID,
    PERSON_BIRTH_DATE,
    PERSON_STREET,
    PERSON_HOUSE_NUMBER,
    PERSON_CITY,
    PERSON_ZIP
) VALUES (
    'Alice',
    'Smith',
    30,
    'F',
    'Female',
    1,
    '921231/5678',
    TO_DATE('1992-12-31', 'YYYY-MM-DD'),
    'Main Street',
    456,
    'Prague',
    '12345'
);

INSERT INTO PERSON (
    PERSON_NAME,
    PERSON_SURNAME,
    PERSON_AGE,
    PERSON_SEX,
    PERSON_GENDER,
    PERSON_INSURANCE_ID,
    PERSON_PERSONAL_ID,
    PERSON_BIRTH_DATE,
    PERSON_STREET,
    PERSON_HOUSE_NUMBER,
    PERSON_CITY,
    PERSON_ZIP
) VALUES (
    'Bob',
    'Johnson',
    40,
    'M',
    NULL,
    NULL,
    '830630/1234',
    TO_DATE('1983-06-30', 'YYYY-MM-DD'),
    'High Street',
    789,
    'Brno',
    '67890'
);

INSERT INTO PERSON (
    PERSON_NAME,
    PERSON_SURNAME,
    PERSON_AGE,
    PERSON_SEX,
    PERSON_GENDER,
    PERSON_INSURANCE_ID,
    PERSON_PERSONAL_ID,
    PERSON_BIRTH_DATE,
    PERSON_STREET,
    PERSON_HOUSE_NUMBER,
    PERSON_CITY,
    PERSON_ZIP
) VALUES (
    'Sam',
    'Taylor',
    25,
    'F',
    'Non-binary',
    NULL,
    '950630/5678',
    TO_DATE('1995-06-30', 'YYYY-MM-DD'),
    'Low Street',
    111,
    'Ostrava',
    '54321'
);

INSERT INTO VEHICLE_OWNER (
    VEHICLE_OWNER_PERSON_ID
) VALUES (
    1
);

INSERT INTO VEHICLE_OWNER (
    VEHICLE_OWNER_PERSON_ID
) VALUES (
    2
);

INSERT INTO VEHICLE_OWNER (
    VEHICLE_OWNER_PERSON_ID
) VALUES (
    3
);

INSERT INTO DRIVER (
    DRIVER_LICENSE_NUMBER,
    DRIVER_CAN_DRIVE,
    DRIVER_PERSON_ID
) VALUES (
    'ABC123',
    'Y',
    1
);

INSERT INTO DRIVER (
    DRIVER_LICENSE_NUMBER,
    DRIVER_CAN_DRIVE,
    DRIVER_PERSON_ID
) VALUES (
    'XYZ789',
    'N',
    2
);

INSERT INTO DRIVER (
    DRIVER_LICENSE_NUMBER,
    DRIVER_CAN_DRIVE,
    DRIVER_PERSON_ID
) VALUES (
    'ABCD-1234-EFGH-5678',
    'Y',
    3
);

INSERT INTO MOTOR_VEHICLE (
    MOTOR_VEHICLE_ID,
    MOTOR_VEHICLE_VIN,
    MOTOR_VEHICLE_MAKE,
    MOTOR_VEHICLE_MODEL,
    MOTOR_VEHICLE_YEAR,
    MOTOR_VEHICLE_LICENSE_PLATE,
    MOTOR_VEHICLE_COLOR,
    MOTOR_VEHICLE_INSURANCE_ID,
    MOTOR_VEHICLE_VEHICLE_OWNER_ID,
    MOTOR_VEHICLE_WEIGHT,
    MOTOR_VEHICLE_HEIGHT,
    MOTOR_VEHICLE_WIDTH,
    MOTOR_VEHICLE_LENGTH,
    MOTOR_VEHICLE_TRANSMISSION,
    MOTOR_VEHICLE_FUEL_TYPE,
    MOTOR_VEHICLE_EMISION_CLASS,
    MOTOR_VEHICLE_TIRE_BRAND,
    MOTOR_VEHICLE_BODY_TYPE
) VALUES (
    1,
    '1G1JC124717202000',
    'Chevrolet',
    'Cavalier',
    2001,
    'ABC123',
    'Silver',
    1,
    1,
    2500,
    150,
    70,
    180,
    'Automatic',
    'Gasoline',
    'Euro 4',
    'Michelin',
    'Sedan'
);

INSERT INTO MOTOR_VEHICLE (
    MOTOR_VEHICLE_ID,
    MOTOR_VEHICLE_VIN,
    MOTOR_VEHICLE_MAKE,
    MOTOR_VEHICLE_MODEL,
    MOTOR_VEHICLE_YEAR,
    MOTOR_VEHICLE_LICENSE_PLATE,
    MOTOR_VEHICLE_COLOR,
    MOTOR_VEHICLE_INSURANCE_ID,
    MOTOR_VEHICLE_VEHICLE_OWNER_ID,
    MOTOR_VEHICLE_WEIGHT,
    MOTOR_VEHICLE_HEIGHT,
    MOTOR_VEHICLE_WIDTH,
    MOTOR_VEHICLE_LENGTH,
    MOTOR_VEHICLE_TRANSMISSION,
    MOTOR_VEHICLE_FUEL_TYPE,
    MOTOR_VEHICLE_EMISION_CLASS,
    MOTOR_VEHICLE_TIRE_BRAND,
    MOTOR_VEHICLE_BODY_TYPE
) VALUES (
    2,
    '5UXFA13595LY08295',
    'BMW',
    'X5',
    2005,
    'DEF456',
    'Black',
    2,
    3,
    3000,
    170,
    80,
    200,
    'Manual',
    'Diesel',
    'Euro 6',
    'Bridgestone',
    'SUV'
);

INSERT INTO MOTOR_VEHICLE (
    MOTOR_VEHICLE_ID,
    MOTOR_VEHICLE_VIN,
    MOTOR_VEHICLE_MAKE,
    MOTOR_VEHICLE_MODEL,
    MOTOR_VEHICLE_YEAR,
    MOTOR_VEHICLE_LICENSE_PLATE,
    MOTOR_VEHICLE_COLOR,
    MOTOR_VEHICLE_INSURANCE_ID,
    MOTOR_VEHICLE_VEHICLE_OWNER_ID,
    MOTOR_VEHICLE_WEIGHT,
    MOTOR_VEHICLE_HEIGHT,
    MOTOR_VEHICLE_WIDTH,
    MOTOR_VEHICLE_LENGTH,
    MOTOR_VEHICLE_TRANSMISSION,
    MOTOR_VEHICLE_FUEL_TYPE,
    MOTOR_VEHICLE_EMISION_CLASS,
    MOTOR_VEHICLE_TIRE_BRAND,
    MOTOR_VEHICLE_BODY_TYPE
) VALUES (
    3,
    '3FA6P0HD6HR238013',
    'Ford',
    'Fusion',
    2017,
    'GHI789',
    'Red',
    2,
    2,
    2700,
    160,
    75,
    190,
    'Automatic',
    'Hybrid',
    'Euro 5',
    'Goodyear',
    'Sedan'
);

INSERT INTO DRIVER_VEHICLE (
    DRIVER_ID,
    VEHICLE_ID
) VALUES (
    1,
    3
);

INSERT INTO DRIVER_VEHICLE (
    DRIVER_ID,
    VEHICLE_ID
) VALUES (
    2,
    2
);

INSERT INTO DRIVER_VEHICLE (
    DRIVER_ID,
    VEHICLE_ID
) VALUES (
    3,
    1
);

INSERT INTO OFFENSE (
    OFFENSE_DRIVER_ID,
    OFFENSE_MOTOR_VEHICLE_ID,
    OFFENSE_DATE_TIME,
    OFFENSE_LOCATION_STREET,
    OFFENSE_LOCATION_CITY,
    OFFENSE_LOCATION_STATE,
    OFFENSE_LOCATION_ZIP,
    OFFENSE_TYPE,
    OFFENSE_DESCRIPTION,
    OFFENSE_POINTS,
    OFFENSE_FINE,
    OFFENSE_LABEL
) VALUES (
    1,
    3,
    TO_DATE('2023-03-25 14:30:00', 'YYYY-MM-DD HH24:MI:SS'),
    'Main St',
    'Prague',
    'CZ',
    '11000',
    'Speeding',
    'Exceeded the speed limit by 20 km/h',
    2,
    2000,
    'Excessive Speed'
);

INSERT INTO OFFENSE (
    OFFENSE_DRIVER_ID,
    OFFENSE_MOTOR_VEHICLE_ID,
    OFFENSE_DATE_TIME,
    OFFENSE_LOCATION_STREET,
    OFFENSE_LOCATION_CITY,
    OFFENSE_LOCATION_STATE,
    OFFENSE_LOCATION_ZIP,
    OFFENSE_TYPE,
    OFFENSE_DESCRIPTION,
    OFFENSE_POINTS,
    OFFENSE_FINE,
    OFFENSE_LABEL
) VALUES (
    2,
    1,
    TO_DATE('2023-03-24 10:15:00', 'YYYY-MM-DD HH24:MI:SS'),
    'Oak St',
    'Brno',
    'CZ',
    '60200',
    'Running a red light',
    'Failed to stop at a red light',
    4,
    4000,
    'Red Light Violation'
);

INSERT INTO OFFENSE (
    OFFENSE_DRIVER_ID,
    OFFENSE_MOTOR_VEHICLE_ID,
    OFFENSE_DATE_TIME,
    OFFENSE_LOCATION_STREET,
    OFFENSE_LOCATION_CITY,
    OFFENSE_LOCATION_STATE,
    OFFENSE_LOCATION_ZIP,
    OFFENSE_TYPE,
    OFFENSE_DESCRIPTION,
    OFFENSE_POINTS,
    OFFENSE_FINE,
    OFFENSE_LABEL
) VALUES (
    3,
    2,
    TO_DATE('2023-03-23 16:45:00', 'YYYY-MM-DD HH24:MI:SS'),
    'Market St',
    'Ostrava',
    'CZ',
    '70030',
    'Seat Belt Violation',
    'Driver was not wearing a seat belt',
    1,
    1000,
    NULL
);

INSERT INTO STOLEN_VEHICLE (
    STOLEN_VEHICLE_DATE,
    STOLEN_VEHICLE_STREET,
    STOLEN_VEHICLE_CITY,
    STOLEN_VEHICLE_MOTOR_VEHICLE_ID,
    STOLEN_VEHICLE_FOUND
) VALUES (
    TO_DATE('2022-05-10', 'YYYY-MM-DD'),
    'Main Street',
    'Prague',
    1,
    'N'
);

INSERT INTO STOLEN_VEHICLE (
    STOLEN_VEHICLE_DATE,
    STOLEN_VEHICLE_STREET,
    STOLEN_VEHICLE_HOUSE_NUMBER,
    STOLEN_VEHICLE_CITY,
    STOLEN_VEHICLE_STATE,
    STOLEN_VEHICLE_ZIP,
    STOLEN_VEHICLE_MOTOR_VEHICLE_ID,
    STOLEN_VEHICLE_FOUND
) VALUES (
    TO_DATE('2022-05-10', 'YYYY-MM-DD'),
    'Oak Street',
    123,
    'Brno',
    'CZ',
    '12345',
    1,
    'Y'
);

INSERT INTO STOLEN_VEHICLE (
    STOLEN_VEHICLE_DATE,
    STOLEN_VEHICLE_STREET,
    STOLEN_VEHICLE_CITY,
    STOLEN_VEHICLE_STATE,
    STOLEN_VEHICLE_ZIP,
    STOLEN_VEHICLE_MOTOR_VEHICLE_ID,
    STOLEN_VEHICLE_FOUND
) VALUES (
    TO_DATE('2022-05-10', 'YYYY-MM-DD'),
    'Broadway',
    'Ostrava',
    'CZ',
    '67890',
    2,
    'N'
);

INSERT INTO PERSONAL_VEHICLE (
    PERSONAL_VEHICLE_ID,
    PERSONAL_VEHICLE_DOOR_COUNT,
    PERSONAL_VEHICLE_SEAT_COUNT
) VALUES (
    1,
    4,
    5
);

INSERT INTO PERSONAL_VEHICLE (
    PERSONAL_VEHICLE_ID,
    PERSONAL_VEHICLE_DOOR_COUNT,
    PERSONAL_VEHICLE_SEAT_COUNT
) VALUES (
    2,
    2,
    2
);

INSERT INTO PERSONAL_VEHICLE (
    PERSONAL_VEHICLE_ID,
    PERSONAL_VEHICLE_DOOR_COUNT,
    PERSONAL_VEHICLE_SEAT_COUNT
) VALUES (
    3,
    4,
    7
);

INSERT INTO CARGO_VEHICLE (
    CARGO_VEHICLE_ID,
    CARGO_VEHICLE_MAX_LOAD,
    CARGO_VEHICLE_TRAILER_LENGTH,
    CARGO_VEHICLE_TRAILER_TYPE,
    CARGO_VEHICLE_CABIN_TYPE,
    CARGO_VEHICLE_DEVICE_TYPE
) VALUES (
    1,
    5000,
    30,
    'Flatbed',
    'Standard',
    'GPS Tracking'
);

INSERT INTO CARGO_VEHICLE (
    CARGO_VEHICLE_ID,
    CARGO_VEHICLE_MAX_LOAD,
    CARGO_VEHICLE_TRAILER_LENGTH,
    CARGO_VEHICLE_TRAILER_TYPE,
    CARGO_VEHICLE_CABIN_TYPE,
    CARGO_VEHICLE_DEVICE_TYPE
) VALUES (
    2,
    10000,
    40,
    'Refrigerated',
    'Sleeper',
    'Bluetooth Radio'
);

INSERT INTO CARGO_VEHICLE (
    CARGO_VEHICLE_ID,
    CARGO_VEHICLE_MAX_LOAD,
    CARGO_VEHICLE_TRAILER_LENGTH,
    CARGO_VEHICLE_TRAILER_TYPE,
    CARGO_VEHICLE_CABIN_TYPE,
    CARGO_VEHICLE_DEVICE_TYPE
) VALUES (
    3,
    8000,
    35,
    'Flatbed',
    'Standard',
    'Climate Control'
);

INSERT INTO MOTORCYCLE (
    MOTORCYCLE_ID,
    MOTORCYCLE_TYPE
) VALUES (
    1,
    'Sport'
);

INSERT INTO MOTORCYCLE (
    MOTORCYCLE_ID,
    MOTORCYCLE_TYPE
) VALUES (
    2,
    'Touring'
);

INSERT INTO MOTORCYCLE (
    MOTORCYCLE_ID,
    MOTORCYCLE_TYPE
) VALUES (
    3,
    'Cruiser'
);

INSERT INTO BUS (
    BUS_ID,
    BUS_SEAT_COUNT,
    BUS_MAX_NUMBER_OF_PASSENGERS
) VALUES (
    1,
    50,
    100
);

INSERT INTO BUS (
    BUS_ID,
    BUS_SEAT_COUNT,
    BUS_MAX_NUMBER_OF_PASSENGERS
) VALUES (
    2,
    30,
    80
);

INSERT INTO BUS (
    BUS_ID,
    BUS_SEAT_COUNT,
    BUS_MAX_NUMBER_OF_PASSENGERS
) VALUES (
    3,
    40,
    90
);

INSERT INTO CARAVAN (
    CARAVAN_ID,
    CARAVAN_TYPE,
    CARAVAN_NUMBER_OF_BEDS
) VALUES (
    1,
    'Travel Trailer',
    4
);

INSERT INTO CARAVAN (
    CARAVAN_ID,
    CARAVAN_TYPE,
    CARAVAN_NUMBER_OF_BEDS
) VALUES (
    2,
    'Fifth Wheel',
    6
);

INSERT INTO CARAVAN (
    CARAVAN_ID,
    CARAVAN_TYPE,
    CARAVAN_NUMBER_OF_BEDS
) VALUES (
    3,
    'Pop-up Camper',
    2
);

INSERT INTO OTHER (
    OTHER_ID,
    OTHER_DESCRIPTION
) VALUES (
    1,
    'Customized pick-up truck'
);

INSERT INTO OTHER (
    OTHER_ID,
    OTHER_DESCRIPTION
) VALUES (
    2,
    'Experimental electric car'
);

INSERT INTO OTHER (
    OTHER_ID,
    OTHER_DESCRIPTION
) VALUES (
    3,
    'Special purpose vehicle for film production'
);