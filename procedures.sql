-- procedure that deletes all driver's offenses from the database
CREATE OR REPLACE PROCEDURE DELETE_DRIVER_OFFENSES(
    P_DRIVER_ID IN DRIVER.DRIVER_ID%TYPE
) IS
BEGIN
 -- delete driver's offenses
    DELETE FROM OFFENSE
    WHERE
        OFFENSE_DRIVER_ID = P_DRIVER_ID;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error occurred: '
            || SQLERRM);
END;
/

-- example
SELECT
    P.PERSON_NAME,
    P.PERSON_SURNAME,
    COUNT(O.OFFENSE_ID) AS NUM_OFFENSES
FROM
    PERSON  P
    JOIN DRIVER D
    ON P.PERSON_ID = D.DRIVER_PERSON_ID LEFT JOIN OFFENSE O
    ON D.DRIVER_ID = O.OFFENSE_DRIVER_ID
WHERE
    D.DRIVER_ID = 1
GROUP BY
    P.PERSON_NAME,
    P.PERSON_SURNAME;

CALL DELETE_DRIVER_OFFENSES(1);

SELECT
    P.PERSON_NAME,
    P.PERSON_SURNAME,
    COUNT(O.OFFENSE_ID) AS NUM_OFFENSES
FROM
    PERSON  P
    JOIN DRIVER D
    ON P.PERSON_ID = D.DRIVER_PERSON_ID LEFT JOIN OFFENSE O
    ON D.DRIVER_ID = O.OFFENSE_DRIVER_ID
WHERE
    D.DRIVER_ID = 1
GROUP BY
    P.PERSON_NAME,
    P.PERSON_SURNAME;

-- procedure that will get informations about a driver's vehicle based on the vehicle owner's ID
CREATE

OR REPLACE PROCEDURE GET_VEHICLE_INFO( VEHICLE_OWNER_PERSON_ID_IN IN VEHICLE_OWNER.VEHICLE_OWNER_PERSON_ID%TYPE, -- vehicle owner's ID


VEHICLE_VIN_OUT OUT MOTOR_VEHICLE.MOTOR_VEHICLE_VIN%TYPE, -- vehicle's VIN


VEHICLE_MAKE_OUT OUT MOTOR_VEHICLE.MOTOR_VEHICLE_MAKE%TYPE, -- vehicle's make


VEHICLE_MODEL_OUT OUT MOTOR_VEHICLE.MOTOR_VEHICLE_MODEL%TYPE, -- vehicle's model


VEHICLE_YEAR_OUT OUT MOTOR_VEHICLE.MOTOR_VEHICLE_YEAR%TYPE, -- vehicle's year


VEHICLE_LICENSE_PLATE_OUT OUT MOTOR_VEHICLE.MOTOR_VEHICLE_LICENSE_PLATE%TYPE -- vehicle's license plate


) IS

-- Declare the cursor
CURSOR VEHICLE_OWNER_CURSOR IS

SELECT
    MV.MOTOR_VEHICLE_VIN,
    MV.MOTOR_VEHICLE_MAKE,
    MV.MOTOR_VEHICLE_MODEL,
    MV.MOTOR_VEHICLE_YEAR,
    MV.MOTOR_VEHICLE_LICENSE_PLATE
FROM
    MOTOR_VEHICLE MV
    INNER JOIN VEHICLE_OWNER VO
    ON MV.MOTOR_VEHICLE_VEHICLE_OWNER_ID = VO.VEHICLE_OWNER_PERSON_ID
WHERE
    VO.VEHICLE_OWNER_PERSON_ID = VEHICLE_OWNER_PERSON_ID_IN;

BEGIN
 -- Open the cursor
    OPEN VEHICLE_OWNER_CURSOR;
 -- Fetch the results into the output variables
    FETCH VEHICLE_OWNER_CURSOR INTO VEHICLE_VIN_OUT, VEHICLE_MAKE_OUT, VEHICLE_MODEL_OUT, VEHICLE_YEAR_OUT, VEHICLE_LICENSE_PLATE_OUT;
 -- Close the cursor
    CLOSE VEHICLE_OWNER_CURSOR;
END;
/

-- example
DECLARE
 -- Declare variables to store output values
    VEHICLE_VIN           MOTOR_VEHICLE.MOTOR_VEHICLE_VIN%TYPE;
    VEHICLE_MAKE          MOTOR_VEHICLE.MOTOR_VEHICLE_MAKE%TYPE;
    VEHICLE_MODEL         MOTOR_VEHICLE.MOTOR_VEHICLE_MODEL%TYPE;
    VEHICLE_YEAR          MOTOR_VEHICLE.MOTOR_VEHICLE_YEAR%TYPE;
    VEHICLE_LICENSE_PLATE MOTOR_VEHICLE.MOTOR_VEHICLE_LICENSE_PLATE%TYPE;
BEGIN
 -- Call the procedure and pass the input parameter
    GET_VEHICLE_INFO(2, VEHICLE_VIN, VEHICLE_MAKE, VEHICLE_MODEL, VEHICLE_YEAR, VEHICLE_LICENSE_PLATE);
 -- Display the output values
    DBMS_OUTPUT.PUT_LINE('Vehicle VIN: '
        || VEHICLE_VIN);
    DBMS_OUTPUT.PUT_LINE('Vehicle make: '
        || VEHICLE_MAKE);
    DBMS_OUTPUT.PUT_LINE('Vehicle model: '
        || VEHICLE_MODEL);
    DBMS_OUTPUT.PUT_LINE('Vehicle year: '
        || VEHICLE_YEAR);
    DBMS_OUTPUT.PUT_LINE('Vehicle license plate: '
        || VEHICLE_LICENSE_PLATE);
END;